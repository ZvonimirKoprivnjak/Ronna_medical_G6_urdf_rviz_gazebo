<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro"> 
    <!--definiranje varijabli-->
    <xacro:property name="base_length" value="0.6" />
    <xacro:property name="base_width" value="0.4" />
    <xacro:property name="base_height" value="0.2" />
    <xacro:property name="wheel_radius" value="0.1" />
    <xacro:property name="wheel_length" value="0.05" />

    <!-- xacro funkcije za inercije-->
    <!-- parametri inercija pomnoženi s dva zbog toga što se robot u gazebu gibao u nazad odnosno inercija je bila premala-->
    <xacro:macro name="box_inertia" params="m l w h xyz rpy">
        <inertial>
            <origin xyz="${xyz}" rpy="${rpy}" />
            <mass value="${m}" />
            <inertia ixx="${(m/12) * (h*h + l*l)}" ixy="0" ixz="0"
                                iyy="${(m/12) * (w*w + l*l)}" iyz="0"
                                izz="${(m/12) * (w*w + h*h)}" />
        </inertial>
    </xacro:macro>
 
    <xacro:macro name="cylinder_inertia" params="m r h xyz rpy">
        <inertial>
            <origin xyz="${xyz}" rpy="${rpy}" />
            <mass value="${m}" />
            <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy="0" ixz="0"
                                iyy="${(m/12) * (3*r*r + h*h)}" iyz="0"
                                izz="${(m/2) * (r*r)}" />
        </inertial>
    </xacro:macro>
 
    <xacro:macro name="sphere_inertia" params="m r xyz rpy">
        <inertial>
            <origin xyz="${xyz}" rpy="${rpy}" />
            <mass value="${m}" />
            <inertia ixx="${(2/5) * m * r * r}" ixy="0" ixz="0"
                                iyy="${(2/5) * m * r * r}" iyz="0"
                            izz="${(2/5) * m * r * r}" />
        </inertial>
    </xacro:macro>







    <material name="blue">
        <color rgba="0 0 0.5 1"/>
    </material>

    <material name="grey">
        <color rgba="0.5 0.5 0.5 1"/>
    </material>



     <!-- LINKOVI -->
    <link name="base_footprint" />
 
    <link name="base_link">
        <visual>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}" />
            </geometry><!-- sve je u metrima -->
            <origin xyz="0 0 ${base_height / 2.0}" rpy="0 0 0" /><!-- polozaj pripadajuceg koordinatnog sustava(samog tijela) u prostoru rpy= role pitch yaw-->
            <!-- rotacije su u radijanima 90=1.57 180=3.14--> 
            <material name="blue" />
        </visual>

        <collision>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}" />
            </geometry>
            <origin xyz="0 0 ${base_height / 2.0}" rpy="0 0 0" />
        </collision>

        <xacro:box_inertia m="5.0" l="${2*base_length}" w="${2*base_width}" h="${2*base_height}"
                           xyz="0 0 ${base_height / 2.0}" rpy="0 0 0" />
    </link>
 
    <!--drive whell's-->
    
    <xacro:macro name="wheel_link" params="prefix">  <!-- makro funkcija-->

    <link name="${prefix}_wheel_link">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}" />
            </geometry>
            <origin xyz="0 0 0" rpy="${pi / 2.0} 0 0" />
            <material name="grey" />
        </visual>

        <collision>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}" />
            </geometry>
            <origin xyz="0 0 0" rpy="${pi / 2.0} 0 0" />
        </collision>

        <xacro:cylinder_inertia m="1.0" r="${2*wheel_radius}" h="${2*wheel_length}" 
                                    xyz="0 0 0" rpy="${pi / 2.0} 0 0" />
    </link> 
    </xacro:macro>
    <!-- poziv makro funkcije dva puta-->
    <xacro:wheel_link prefix="right" />
    <xacro:wheel_link prefix="left" />


    <!-- pomocni kotac-->

    <link name="caster_wheel_link">
        <visual>
            <geometry>
                <sphere radius="${wheel_radius / 2.0}" />
            </geometry> 
            <origin xyz="0 0 0" rpy="0 0 0" />
            <material name="grey" />
        </visual>

        <collision>
            <geometry>
                <sphere radius="${wheel_radius / 2.0}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
        </collision>

        <xacro:sphere_inertia m="0.5" r="${2*wheel_radius / 2.0}"
                              xyz="0 0 0" rpy="0 0 0" />
    </link>

    <!-- JOINT KONFIGURACIJA -->
    <!-- rotacije zglobova odnose se u odnosu na child koordinatni sustav
    dok se rotacije child u odnosu na parent definiraju tocno tako cild se rotira u koord sustavu parent-->
 
    <joint name="base_joint" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link" />
        <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0"/>
    </joint>
 
    <joint name="base_right_wheel_joint" type="continuous"> 
        <parent link="base_link" />
        <child link="right_wheel_link" />
        <origin xyz="${-base_length / 4.0} ${-(base_width + wheel_length) / 2.0} 0" rpy="0 0 0" />
        <axis xyz="0 1 0" />
    </joint>
 
    <joint name="base_left_wheel_joint" type="continuous">
        <parent link="base_link" />
        <child link="left_wheel_link" />
        <origin xyz="${-base_length / 4.0} ${(base_width + wheel_length) / 2.0} 0" rpy="0 0 0" />
        <axis xyz="0 1 0" />
    </joint>
 
    <joint name="base_caster_wheel_joint" type="fixed">
        <parent link="base_link" />
        <child link="caster_wheel_link" /> 
        <origin xyz="${base_length / 3.0} 0 ${-wheel_radius / 2.0}" rpy="0 0 0" />
    </joint>
 
</robot>

<!-- poziv urdf modela "ros2 launch urdf_tutorial display.launch.py  model:=/home/crta/robot.urdf"-->
